---

# == Notes ==

# - GitLab automatically passes artifacts from previous stages by default
# - This project requires runners with specific tags to execute specific jobs
# - This project includes variables specific to using 'Docker In Docker'
# - Set required secret variables at: https://gitlab.data.bas.ac.uk/web-apps/bsk/bas-style-kit-file-upload-endpoint/settings/ci_cd

# = Secret variables
# - Variables are grouped by section in KEY: "value" format (e.g. FOO: "bar")
#   Sensitive values are represented by "[Sensitive]"
#
# - Heroku
# > HEROKU_API_KEY: "[Sensitive]"
#
# - Sentry
# > SENTRY_AUTH_TOKEN: "[Sensetive]"
#
# - Snyk
# > SNYK_TOKEN: "[Sensitive]"

# == Global settings ==

stages:
  - test
  - lint
  - package
  - review
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  GITLAB_REGISTRY: docker-registry.data.bas.ac.uk
  APP_NAME: bas-style-kit-file-upload-endpoint
  HEROKU_APP_NAME: bas-style-kit-file-upload
  SENTRY_ORG: antarctica
  SENTRY_PROJECT: bsk-file-upload-endpoint
  SNYK_ORG: antarctica
  SNYK_PROJECT: bsk-file-upload-endpoint

image:
  name: docker-registry.data.bas.ac.uk/web-apps/bsk/bas-style-kit-file-upload-endpoint:0.2.0-develop-alpine
  entrypoint: [""]

# == Jobs ==

test-app:
  stage: test
  variables:
    FLASK_ENV: testing
  script:
    - "flask test"

dependencies-app:
  stage: lint
  image:
    name: antarctica/snyk-cli:python-3
    entrypoint: [""]
  script:
    - "pip install -r requirements.txt"
    - "snyk test"
    - "snyk monitor --project-name=$SNYK_PROJECT --org=$SNYK_ORG"

pep8-app:
  stage: lint
  script:
    - "flake8 . --ignore=E501"

bandit-app:
  stage: lint
  script:
    - "bandit -r ."

review:
  stage: review
  image:
    name: wingrunr21/alpine-heroku-cli
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
  before_script:
    - "export CI_COMMIT_REF_SLUG_SHORT=`echo $CI_COMMIT_REF_SLUG | cut -c1-19`"
  script:
    - "heroku apps:create bra-bskfue-$CI_COMMIT_REF_SLUG_SHORT --no-remote --region eu"
  environment:
    name: review/$CI_BUILD_REF_NAME
    url: https://bra-bskfue-$CI_COMMIT_REF_SLUG_SHORT.herokuapp.com/
    on_stop: stop_review
  only:
    - branches
  except:
    - master
    - tags

stop_review:
  stage: review
  image:
    name: wingrunr21/alpine-heroku-cli
    entrypoint: [""]
  before_script:
    - "export CI_COMMIT_REF_SLUG_SHORT=`echo $CI_COMMIT_REF_SLUG | cut -c1-19`"
  script:
    - "heroku apps:destroy --app bra-bskfue-$CI_COMMIT_REF_SLUG_SHORT --confirm=confirm"
  variables:
    GIT_STRATEGY: none
  when: manual
  environment:
    name: review/$CI_BUILD_REF_NAME
    action: stop

package-heroku:
  stage: package
  tags:
    - dnd
  services:
    - docker:dind
  image:
    name: docker:stable-dind
    entrypoint: [""]
  script:
    - "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $GITLAB_REGISTRY"
    - "docker login -u _ -p $HEROKU_API_KEY registry.heroku.com"
    - "docker build -t registry.heroku.com/$HEROKU_APP_NAME/web -f Dockerfile.heroku --build-arg APP_RELEASE=$CI_COMMIT_SHA ."
    - "docker push registry.heroku.com/$HEROKU_APP_NAME/web"
  only:
    - master

deploy-heroku:
  stage: deploy
  image:
    name: wingrunr21/alpine-heroku-cli
    entrypoint: [""]
  script:
    - "heroku container:release web --app $HEROKU_APP_NAME"
  only:
    - master
  environment:
    name: Production
    url: https://bas-style-kit-file-upload.herokuapp.com/

deploy-sentry:
  stage: deploy
  image:
    name: getsentry/sentry-cli
    entrypoint: [""]
  script:
    - "sentry-cli releases new --finalize $CI_COMMIT_SHA"
    - "sentry-cli releases deploys $CI_COMMIT_SHA new -e production"
  only:
    - master
